# DocHub может работать в двух режимах:
#   (F) frontend - "Толстый" клиент. Вся бизнес-логика находится на строне фронта. 
#   (FB) frontend + backend - "Тонкий" клиент. Бизнес-логика в основном находится на стороне backend.
#   (P) IDEA Plugin - Плагин для IDEA. Бизнес-логика в основном находится на стороне плагина.


# (F / FB) URI в формате DocHub корневого манифеста (обязательно)
# Варианты использования:
#   /documentation/root.yaml - (F / FB) Относительная ссылка на файл расположенный в папке @/public/
#   https://dochub.info/documentation/root.yaml - (F / FB) прямая ссылка на внешний http/https ресурс
#   gitlab:34:main@root.yaml - Ссылка на на файл в GitLab репозитории. 
#                              (F) Может использоваться только при указании VUE_APP_DOCHUB_PERSONAL_TOKEN или VUE_APP_DOCHUB_GITLAB_URL + VUE_APP_DOCHUB_APP_ID 
#                              (FB) Может использоваться только при указании VUE_APP_DOCHUB_PERSONAL_TOKEN
#       Структура ссылки: 
#       gitlab      - протокол GitLab
#       34          - идентификатор репозитория
#       main        - бранч
#       root.yaml   - путь к файлу
#       
#   file://root.yaml - (FB) относительная ссылка на файл. Требуется обязательное определение VUE_APP_DOCHUB_BACKEND_FILE_STORAGE
# (F / FB) Идентификатор документа главной страницы (необязательно). По умолчанию dochub_welcome
# VUE_APP_DOCHUB_ROOT_DOCUMENT=dochub_welcome

# (F / FB) URL GitLab (необязательно)
# VUE_APP_DOCHUB_GITLAB_URL=https://foo.space

# (F / FB) Персональный токен gitlab. Используется для локальной разработки
# VUE_APP_DOCHUB_PERSONAL_TOKEN=9H...FR

# (F) Идентификатор приложения зарегистрированного в GitLab (обязательно, если есть VUE_APP_DOCHUB_GITLAB_URL и нет VUE_APP_DOCHUB_PERSONAL_TOKEN)
# https://docs.gitlab.com/ee/integration/oauth_provider.html
# VUE_APP_DOCHUB_APP_ID=5f3...f0

# (F) Секрет приложения (обязательно, если есть VUE_APP_DOCHUB_GITLAB_URL и нет VUE_APP_DOCHUB_PERSONAL_TOKEN)
# https://docs.gitlab.com/ee/integration/oauth_provider.html
# VUE_APP_DOCHUB_CLIENT_SECRET=1e4...384

# (F / FB) Сервер рендеринга PlantUML (По умолчанию www.plantuml.com/plantuml/svg/)
# При сборке через docker-compose по умолчанию localhost:8079/svg/
# VUE_APP_PLANTUML_SERVER=localhost:8079/svg/

# (P) Если "plugin" сборка осуществляется для использования в IDEA плагине https://github.com/RabotaRu/DocHubIdeaPlugin
# Для production сборки используйте npm run plugin.
# Данный параметр удобен для разработки в режиме плагина, т.к. подключает моки $PAPI.
# VUE_APP_DOCHUB_MODE=plugin

# (F / FB) Если "y" подключает в описание документацию DocHub
# VUE_APP_DOCHUB_APPEND_DOCHUB_DOCS= y / n

# (F / FB / P) Если "y" подключает контроль метамодели DocHub
# VUE_APP_DOCHUB_APPEND_DOCHUB_METAMODEL= y / n

# (F / FB / P) Определяет движок рендеринга (graphviz | smetana | elk). По умолчанию ELK
# VUE_APP_DOCHUB_RENDER_CORE=ELK

# (F / FB) [КЭШ] Включить/отключить кэширование(NONE | HEAD | GET) - По умолчанию NONE
# VUE_APP_DOCHUB_CACHE=NONE

# (F / FB) [УРОВЕНЬ кэширования] (1 | 2) - По умолчанию 1
# 1 - [low level] кэш сетевых запросов(requests)
# 2 - [high level] full кэш(уровень 1 + манифест)
# VUE_APP_DOCHUB_CACHE_LEVEL=1

# (F / FB) Анализатор запросов JSONata
# Выводит информацию о выполняемых запросах в консоль
# VUE_APP_DOCHUB_JSONATA_ANALYZER= y / n

# (FB) Режим backend
# Если установлено, считается, что DocHub функционирует в режиме frontend + backend.
# По умолчанию DocHub функционирует в режиме "толстый клиент" (F). Т.е. вся бизнес-логика реализуется в frontend.
# VUE_APP_DOCHUB_BACKEND_URL= http://localhost:3030

# (FB) Порт для backend сервера. По умолчанию 3030.
# VUE_APP_DOCHUB_BACKEND_PORT=3030

# (FB) Каталог, где размещаются файлы манифестов
# По умолчанию @/public/
# ВНИМАНИЕ! Размещение файлов в @/public/ будет приводить к их прямой доступности из фронта по URL.
# VUE_APP_DOCHUB_BACKEND_FILE_STORAGE=~/DocHub/storage


# Больше информации о переменных среды выполнения
# https://cli.vuejs.org/ru/guide/mode-and-env.html
