rules:
  validators:
    dochub.experts:                               # Валидатор контролирует заполнение поля expert для всех компонентов
      title: Не указаны эксперты для компонентов  # Название валидатора
      source: >                                   # Источник данных об ошибках. В данном случае JSONata запрос
        ([
          components.$spread().(                                /* Сканируем все компоненты */
              $ID := $keys()[0];                                /* Получаем идентификатор компонента */
              {                                                 /* Генерируем структуру описания ошибки */
                  "uid": "expert-component-" & $ID,             /* Уникальный идентификатор выявленной ошибки */
                  "location": "/architect/components/" & $ID,             /* Ссылка на расположение объекта ошибки */
                  "correction": "Укажите эксперта компонента",  /* Рекомендации как исправить проблему */
                  "description": "Компоненты должены иметь сведения об эксперте. 
                      Если необходимо исключить для данного компонента эту информацию,
                      укажите идентификатор ошибки в разделе 'exceptions' с описанием причины
                  ",
                  "standard": "/docs/dochub.standards.examples.expert" /* Ссылка на стандарт */
              }
          )[$not($boolean("" & *.expert))]        /* Отбираем все компоненты где поле 'expert' пустое*/
        ])
    dochub.source:                                    # Валидатор контролирует заполнение поля указывающего на исходник
      title: Исходный файл                            # Название валидатора
      source: >                                       # Источник данных об ошибках. В данном случае JSONata запрос
        ([([
          components.$spread().(                                              /* Сканируем все компоненты */
            $ID := $keys()[0];
              {                                                               /* Генерируем массив признаков проблем */
                "isComponent": *.entity = "component",                        /* Это компонент */
                "isDocHubDomain": $boolean($match($ID, /dochub\.front.*/)),   /* в домене DocHub */
                "isSourceEmpty":  $not($boolean("" & *.source)),              /* и поле source не заполнено */
                "id": $ID
              }
          )        
        ][isDocHubDomain and isSourceEmpty and isComponent]).{ /* Отбираем все компоненты где поле 'source' пустое*/
            "uid": "source-component-" & id,                                    /* Уникальный идентификатор выявленной ошибки */
            "location": "/architect/components/" & id,                          /* Ссылка на расположение объекта ошибки */
            "correction": "Укажите где разсположен файл с исходными кодами",    /* Рекомендации как исправить проблему */
            "description": "Компоненты должены иметь сведения о файлах исходного кода в которых они реализуются. 
                Если необходимо исключить для данного компонента эту информацию,
                укажите идентификатор ошибки в разделе 'exceptions' с описанием причиныsss
            ",
            "isDocHubDomain":isDocHubDomain
        }])
  exceptions:                                               # Исключения для валидаторов
    "source-component-dochub.browser":                      # UID ошибки для исключения
      reason: >                                             # Причина исключения
        Компонент браузера не имеет исохдных кодов
      cause: /docs/dochub.exceptions.examples.dochub_front   # Документ-основание исключения