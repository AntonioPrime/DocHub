openapi: 3.0.3
info:
  version: 1.0.0
  title: DocHub backend API
servers:
  - url: "http://localhost:3030/"
    description: Локальный сервер
tags:
- name: JSONata
  description: "JSONata API"
  externalDocs:
    description: "Документация JSONata"
    url: "https://jsonata.org/"
paths:
  /core/storage/jsonata/{query}:
    get:
      tags:
      - JSONata
      summary: Выполняет произвольный запрос JSONata к данным архитектуры 
      parameters:
        - in: path
          name: query
          description: JSONata запрос в скобках "([запрос])" или идентификатор DataSet без скобок
          required: true
          schema:
            $ref: '#/components/schemas/JSONataQuery'
          example: >
            ({"id": $params.id, "limit": $params.limit, "type": $self.type, "template": $self.template})
        - in: query
          name: params
          description: > 
            JSON структура с параметрами передающаяся в запрос.
            Будет доступна в переменной $params.
          required: false
          schema:
            $ref: '#/components/schemas/JSONataParams'
          example: '{"id":"sber.rdwsoft","limit":8}'
        - in: query
          name: subject
          description: > 
            JSON структура с профилем объекта, который выполняет запрос.
            Будет доступна в переменной $self.
          required: false
          schema:
            $ref: '#/components/schemas/JSONataParams'
          example: '{"type":"markdown","template":"template.md"}'
      responses:
        "200":
          description: "Результат выполнения запроса"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONataResult'
components:
  schemas:
    JSONataQuery:
      type: string
      pattern: '^([a-zA-Z\_]*(\.[a-zA-Z\_][a-zA-Z\_]*)*)|(\(.*\))$'
    JSONataParams:
      type: string
    JSONataResult:
      type: object
